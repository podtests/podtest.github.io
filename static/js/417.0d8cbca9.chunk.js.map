{"version":3,"file":"static/js/417.0d8cbca9.chunk.js","mappings":"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","sources":["components/ContentBlock/LeftContentBlock/styles.ts","components/ContentBlock/LeftContentBlock/index.tsx","components/ContentBlock/RightContentBlock/styles.ts","components/ContentBlock/RightContentBlock/index.tsx","components/ContentBlock/MainContentBlock/styles.ts","components/ContentBlock/MainContentBlock/index.tsx","components/ContentBlock/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const LeftContentSection = styled(\"section\")`\r\n  position: relative;\r\n  padding: 10rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 4rem 0 4rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-top: 4rem;\r\n  }\r\n`;\r\n\r\nexport const ServiceWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n`;\r\n\r\nexport const MinTitle = styled(\"h6\")`\r\n  font-size: 15px;\r\n  line-height: 1rem;\r\n  padding: 0.5rem 0;\r\n  text-transform: uppercase;\r\n  color: #000;\r\n  font-family: \"Motiva Sans Light\", sans-serif;\r\n`;\r\n\r\nexport const MinPara = styled(\"p\")`\r\n  font-size: 13px;\r\n`;\r\n\r\nexport const ButtonWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: 80%;\r\n  }\r\n\r\n  button:last-child {\r\n    margin-left: 20px;\r\n  }\r\n`;","import { Row, Col } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { SvgIcon } from \"../../../common/SvgIcon\";\r\nimport { ContentBlockProps } from \"../types\";\r\nimport { Button } from \"../../../common/Button\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport {\r\n  LeftContentSection,\r\n  Content,\r\n  ContentWrapper,\r\n  ServiceWrapper,\r\n  ButtonWrapper,\r\n  MinTitle,\r\n  MinPara,\r\n} from \"./styles\";\r\n\r\nconst LeftContentBlock = ({\r\n  icon,\r\n  title,\r\n  content,\r\n  content2,\r\n  section,\r\n  button,\r\n  t,\r\n  id,\r\n}: ContentBlockProps) => {\r\n  return (\r\n    <LeftContentSection>\r\n      <Fade direction=\"left\">\r\n        <Row justify=\"space-between\" align=\"middle\" id={id}>\r\n          <Col lg={11} md={11} sm={12} xs={24}>\r\n            <SvgIcon src={icon} width=\"100%\" height=\"100%\" />\r\n          </Col>\r\n          <Col lg={11} md={11} sm={11} xs={24}>\r\n            <ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n              <Content>{t(content)}</Content>\r\n              <Content>{t(content2)}</Content>             \r\n              <ServiceWrapper>\r\n                <Row justify=\"space-between\">\r\n                  {typeof section === \"object\" &&\r\n                    section.map((item: any, id: number) => {\r\n                      return (\r\n                        <Col key={id} span={11}>\r\n                          <SvgIcon src={item.icon} width=\"60px\" height=\"60px\" />\r\n                          <MinTitle>{t(item.title)}</MinTitle>\r\n                          <MinPara>{t(item.content)}</MinPara>                          \r\n                        </Col>\r\n                      );\r\n                    })}\r\n                </Row>\r\n              </ServiceWrapper>\r\n            </ContentWrapper>\r\n          </Col>\r\n        </Row>\r\n      </Fade>\r\n    </LeftContentSection>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(LeftContentBlock);\r\n","import styled from \"styled-components\";\r\n\r\nexport const RightBlockContainer = styled(\"section\")`\r\n  position: relative;\r\n  padding: 10rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 8rem 0 6rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 4rem 0 3rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-bottom: 4rem;\r\n  }\r\n`;\r\n\r\nexport const ButtonWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: 80%;\r\n  }\r\n\r\n  button:last-child {\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { SvgIcon } from \"../../../common/SvgIcon\";\r\nimport { Button } from \"../../../common/Button\";\r\nimport { ContentBlockProps } from \"../types\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport {\r\n  RightBlockContainer,\r\n  Content,\r\n  ContentWrapper,\r\n  ButtonWrapper,\r\n} from \"./styles\";\r\n\r\nconst RightBlock = ({\r\n  title,\r\n  content,\r\n  content2,\r\n  button,\r\n  icon,\r\n  t,\r\n  id,\r\n}: ContentBlockProps) => {\r\n  const scrollTo = (id: string) => {\r\n    const element = document.getElementById(id) as HTMLDivElement;\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n  return (\r\n    <RightBlockContainer>\r\n      <Fade direction=\"right\">\r\n        <Row justify=\"space-between\" align=\"middle\" id={id}>\r\n          <Col lg={11} md={11} sm={11} xs={24}>\r\n            <ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n              <Content>{t(content)}</Content>\r\n              <Content>{t(content2)}</Content>\r\n              <ButtonWrapper>\r\n                {typeof button === \"object\" &&\r\n                  button.map((item: any, id: number) => {\r\n                    return (\r\n                      <Button\r\n                        key={id}\r\n                        color={item.color}\r\n                        fixedWidth={true}\r\n                        onClick={() => scrollTo(item.scroll_to)}\r\n                      >\r\n                        {t(item.title)}\r\n                      </Button>\r\n                    );\r\n                  })}\r\n              </ButtonWrapper>\r\n            </ContentWrapper>\r\n          </Col>\r\n          <Col lg={11} md={11} sm={12} xs={24}>\r\n            <SvgIcon src={icon} width=\"100%\" height=\"100%\" />\r\n          </Col>\r\n        </Row>\r\n      </Fade>\r\n    </RightBlockContainer>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(RightBlock);\r\n","import styled from \"styled-components\";\r\n\r\nexport const MainBlockContainer = styled(\"section\")`\r\n  position: relative;\r\n  padding: 10rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 8rem 0 6rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 4rem 0 3rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-bottom: 4rem;\r\n  }\r\n`;\r\n\r\nexport const ButtonWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: 80%;\r\n  }\r\n\r\n  button:last-child {\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { SvgIcon } from \"../../../common/SvgIcon\";\r\nimport { Button } from \"../../../common/Button\";\r\nimport { ContentBlockProps } from \"../types\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport {\r\n  MainBlockContainer,\r\n  Content,\r\n  ContentWrapper,\r\n  ButtonWrapper,\r\n} from \"./styles\";\r\n\r\nconst MainBlock = ({\r\n  title,\r\n  content,\r\n  content2,\r\n  content3,\r\n  content4,\r\n  button,\r\n  icon,\r\n  t,\r\n  id,\r\n}: ContentBlockProps) => {\r\n  return (\r\n    <MainBlockContainer>\r\n      <Fade direction=\"right\">\r\n        <Row justify=\"space-between\" align=\"middle\" id={id}>\r\n          <Col lg={11} md={11} sm={11} xs={24}>\r\n            <ContentWrapper>\r\n              <h6>{t(title)}</h6>                            \r\n              <Content>{t(content)}</Content>\r\n              <ButtonWrapper>\r\n                {typeof button === \"object\" &&\r\n                  button.map((item: any, id: number) => {\r\n                    return (\r\n                      <Button\r\n                        key={id}\r\n                        color={item.color}\r\n                        fixedWidth={true}\r\n                        onClick={() => window.open('https://forms.gle/3cbB2qUhLLFFSNdj9') }\r\n                      >\r\n                        {t(item.title)}\r\n                      </Button>\r\n                    );\r\n                  })}\r\n              </ButtonWrapper>\r\n              <br></br>\r\n              <Content>{t(content2)}</Content>\r\n              <Content>{t(content3)}</Content>\r\n              <Content>{t(content4)}</Content>              \r\n            </ContentWrapper>\r\n          </Col>\r\n          <Col lg={11} md={11} sm={12} xs={24}>\r\n            <SvgIcon src={icon} width=\"100%\" height=\"100%\" />\r\n          </Col>\r\n        </Row>\r\n      </Fade>\r\n    </MainBlockContainer>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(MainBlock);\r\n","import LeftContentBlock from \"./LeftContentBlock\";\r\nimport RightContentBlock from \"./RightContentBlock\";\r\nimport MainContentBlock from \"./MainContentBlock\";\r\nimport { ContentBlockProps } from \"./types\";\r\n\r\nconst ContentBlock = (props: ContentBlockProps) => {\r\n  if (props.type === \"left\") return <LeftContentBlock {...props} />;\r\n  if (props.type === \"right\") return <RightContentBlock {...props} />;\r\n  if (props.type === \"main\") return <MainContentBlock {...props} />;\r\n  return null;\r\n};\r\n\r\nexport default ContentBlock;\r\n"],"names":["LeftContentSection","styled","Content","ContentWrapper","ServiceWrapper","MinTitle","MinPara","withTranslation","icon","title","content","content2","section","t","button","id","direction","justify","align","lg","md","sm","xs","SvgIcon","src","width","height","map","item","span","RightBlockContainer","ButtonWrapper","Button","color","fixedWidth","onClick","document","getElementById","scrollIntoView","behavior","scrollTo","scroll_to","MainBlockContainer","content3","content4","window","open","props","type","RightContentBlock","MainContentBlock"],"sourceRoot":""}